name: Frontend CI/CD

on:
  push:
    branches:
      - main
      - develop
      - feature/**
    paths:
      - 'frontend/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |

          # ルートの .env ファイルを生成
          cat > .env << EOF
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          EOF

          # 空のbackend/.env ファイルを生成（エラー回避のため）
          mkdir -p backend
          touch backend/.env

          # frontend/.env.local ファイルを生成
          cat > frontend/.env.local << EOF
          NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_ENV=${{ secrets.NEXT_PUBLIC_ENV }}

      - name: Install bun and Dependencies
        working-directory: ./frontend
        run: |
          npm install -g bun
          bun install

      - name: Build and run frontend Docker container
        working-directory: ./frontend
        run: |
          docker compose build frontend
          docker compose up -d frontend
          docker compose ps

      - name: Install Dependencies
        run: docker compose exec -T frontend bun install
        working-directory: ./frontend

      - name: Run format check
        run: docker compose exec -T frontend bun run format
        working-directory: ./frontend

      - name: Run linter
        run: docker compose exec -T frontend bun run lint
        working-directory: ./frontend

      - name: Run Test
        run: docker compose exec -T frontend bun run test
        working-directory: ./frontend

      - name: Stop and remove Docker containers
        run: docker compose down
        working-directory: ./frontend
# ＊リリース時にはデプロイの設定も
